name: Publish Helm Chart

on:
  push:
    branches:
      - main
    tags:
      - '*'
    paths:
      - 'charts/**'
  pull_request:
    paths:
      - 'charts/**'
  workflow_dispatch:
    inputs:
      reason:
        description: 'Reason for manual trigger'
        required: true
        default: ''

concurrency:
  group: ${{ github.workflow }}-${{ (github.head_ref && github.ref) || github.run_id }}
  cancel-in-progress: true

env:
  REGISTRY: ghcr.io
  CHART_NAME: openhands

jobs:
  publish-helm-chart:
    name: Publish Helm Chart
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Install Helm
        uses: azure/setup-helm@v4
        with:
          version: '3.14.0'

      - name: Login to GHCR
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Lowercase Repository Owner
        run: |
          echo REPO_OWNER=$(echo ${{ github.repository_owner }} | tr '[:upper:]' '[:lower:]') >> $GITHUB_ENV

      - name: Package and Push Helm Chart
        if: github.event_name != 'pull_request'
        run: |
          cd charts

          # Package the chart
          helm package ${{ env.CHART_NAME }}

          # Get chart version
          CHART_VERSION=$(helm show chart ${{ env.CHART_NAME }} | grep '^version:' | awk '{print $2}')
          echo "Chart version: $CHART_VERSION"

          # Push to GHCR
          helm push ${{ env.CHART_NAME }}-${CHART_VERSION}.tgz oci://${{ env.REGISTRY }}/${{ env.REPO_OWNER }}

      - name: Package Helm Chart (PR only)
        if: github.event_name == 'pull_request'
        run: |
          cd charts
          helm package ${{ env.CHART_NAME }}
          echo "Chart packaged successfully for PR validation"

      - name: Lint Helm Chart
        run: |
          cd charts
          helm lint ${{ env.CHART_NAME }}

      - name: Template Helm Chart
        run: |
          cd charts
          helm template test-release ${{ env.CHART_NAME }} --debug
